# Kano default values

global:
  # subdomain to be used when computing the ingress host
  subdomain: "test.local"
  # certIssuer to assign to the ingress cert-manager annotation
  certIssuer: ""
  # secret where to share sentitive environment variables
  secret: ""

# commonAnnotations are annotations to be added to all resources (sub-charts are not considered). Evaluated as a template
commonAnnotations: {}

# commoneLabels are labels to be added to all resources (sub-charts are not considered). Evaluated as a template
commonLabel: {}

# replicatCount is the number of replicas
replicaCount: 1

imagePullSecrets: 
  - name: "kalisio-harbor"

image:
  repository: kalisio/kano
  tag: "prod"
  pullPolicy: IfNotPresent
  

# forceRestart forces the pod to be restarted when upgrading the chart
forceRestart: false

service:
  enabled: true
  type: NodePort # node for minikube until we use nginx-ingress
  port: 8081                                                           
  annotations: {}

ingress:
  enabled: false

distribution:
  # enabled specifies whether or not to use distribution
  enabled: false
  # basePort specifies the starting port of the port range
  basePort: 10010
  # highestPort specifies the ending port of the port range
  highestPort: 10019
  # delay specifies the time to wait before starting service discovery
  startDelay: "20000"
  # redisUrl specifies th redis connection string
  redisUrl:
    secret: ""
    key: ""

env:
  # appSecret specifies the application secret
  appSecret:
    secret: "kano-secret"
    key: "appSecret"
  # appId specifies the application id
  appId: "myId"
  # dbUrl specifies the application database connection string 
  dbUrl:
    secret: "kano-secret"
    key: "dbUrl"
  # dataDbUrl specifies the data database connection string 
  dataDbUrl:
    secret: "kano-secret"
    key: "dbUrl"
  # apiGatewayUrl specifies whether to enable the API Gateway
  #apiGatewayUrl: "https://api.{{ .Values.global.subdomain }}"    
  # String to define the layers to be integrated into the catalog
  layersFilter: "*"
  # mapillaryToken specifies the Mapillary token
  mapillaryToken: 
    secret: "kano-secret"
    key: "mapillaryToken"
  # cesiumToken specifies the Mapillary token
  cesiumToken:
    secret: "kano-secret"
    key: "cesiumToken"
  # logLevel specifies the level of frontend log
  logLevel: ""
  # debug specified the list of backend modules for which the output is enabled
  debug: ""

# resources are resource requests and limits to be applied
resources: {}

# default security context, run as non root uid 1000
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000

# override the configuration of Kano with config map
additionalConfig:
  configMap: 'chirpstack-kano-config'
  fileMapping:
    local.cjs: /opt/kalisio/kano/api/config/local.cjs
    dev-layers.cjs: /opt/kalisio/kano/api/config/layers/dev-layers.cjs